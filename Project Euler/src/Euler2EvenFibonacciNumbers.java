import java.util.ArrayList;

// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2,
// the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
public class Euler2EvenFibonacciNumbers {
    public static void main(String[] args){
        ArrayList<Integer> list = new ArrayList<>();
        int num = 0 ;
        int term = 1;
        int sum = 0;
        while(num<4000000){
            num = Fibonacci(term);
            if (num<4000000 && num%2==0){
                list.add(num);
                sum = sum + num;
            }
            term++;
        }
        System.out.println(list);
        System.out.println("Sum of all even terms less than 4 million in Fibonacci series is: "+sum);
    }
    public static int Fibonacci(int n){
        if(n<1) {
            throw new IllegalArgumentException();
        }else if(n==1){
            return 1;
        }else if(n==2){
            return 2;
        }else{
            return Fibonacci(n-1) + Fibonacci(n-2);
        }
    }
}